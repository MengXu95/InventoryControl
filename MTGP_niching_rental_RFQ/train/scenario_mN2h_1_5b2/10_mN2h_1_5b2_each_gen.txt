Best individuals from each gen:

Gen: 0
Individual:
Tree 0:
maximum(minimum('FOC', 'PTC'), minimum('PLSC', 'PIP'))
Tree 1:
subtract(square(protected_sqrt(add('RP', square(multiply('CRENT', 'RCAP'))))), maximum(add(add(add('TREQ', maximum('TREQ', 'TREQ')), maximum(square('RCAP'), 'RCAP')), maximum(subtract(protected_sqrt('RCAP'), protected_sqrt('RP')), 'RP')), multiply(square(minimum(maximum('RP', 'RCAP'), multiply('CRENT', 'CRENT'))), multiply(multiply('RCAP', 'RDUR'), maximum(maximum('CRENT', 'RP'), minimum('CRENT', 'CRENT'))))))
Tree 2:
protected_div(maximum(maximum('INL', minimum('INL', 'RFQ')), square(square('RFQ'))), square(protected_div(minimum('INL', 'RFQ'), subtract('RFQ', 'INL'))))

Gen: 1
Individual:
Tree 0:
maximum(minimum('FOC', 'PTC'), minimum('PLSC', 'PIP'))
Tree 1:
subtract(square(protected_sqrt(add('RP', square(multiply('CRENT', 'RCAP'))))), maximum(add(add(add('TREQ', maximum('TREQ', 'TREQ')), maximum(square('RCAP'), 'RCAP')), maximum(subtract(protected_sqrt('RCAP'), protected_sqrt('RP')), 'RP')), multiply(square(minimum(maximum('RP', 'RCAP'), multiply('CRENT', 'CRENT'))), multiply(multiply('RCAP', 'RDUR'), maximum(maximum('CRENT', 'RP'), minimum('CRENT', 'CRENT'))))))
Tree 2:
protected_div(maximum(maximum('INL', minimum('INL', 'RFQ')), square(square('RFQ'))), square(protected_div(minimum('INL', 'RFQ'), subtract('RFQ', 'INL'))))

Gen: 2
Individual:
Tree 0:
maximum(minimum('FOC', 'PTC'), minimum('PLSC', 'PIP'))
Tree 1:
subtract(square(protected_sqrt(add('RP', square(multiply('CRENT', 'RCAP'))))), maximum(add(add(add('TREQ', maximum('TREQ', 'TREQ')), maximum(square('RCAP'), 'RCAP')), maximum(subtract(protected_sqrt('RCAP'), protected_sqrt('RP')), 'RP')), multiply(square(minimum(maximum('RP', 'RCAP'), multiply('CRENT', 'CRENT'))), multiply(multiply('RCAP', 'RDUR'), maximum(maximum('CRENT', 'RP'), minimum('CRENT', 'CRENT'))))))
Tree 2:
protected_div(maximum(maximum('INL', minimum('INL', 'RFQ')), square(square('RFQ'))), square(protected_div(minimum('INL', subtract('INL', 'RFQ')), subtract('RFQ', 'INL'))))

Gen: 3
Individual:
Tree 0:
maximum(minimum('FOC', 'PTC'), minimum('PLSC', 'PIP'))
Tree 1:
subtract(square(protected_sqrt(add('RP', square(multiply('CRENT', 'RCAP'))))), maximum(add(add(add('TREQ', maximum('TREQ', 'TREQ')), maximum(square('RCAP'), 'RCAP')), maximum(subtract(protected_sqrt('RCAP'), protected_sqrt('RP')), 'RP')), multiply(square(minimum(maximum('RP', 'RCAP'), multiply('CRENT', 'CRENT'))), multiply(multiply('RCAP', 'RDUR'), maximum(maximum('CRENT', 'RP'), minimum('CRENT', 'CRENT'))))))
Tree 2:
protected_div(maximum(maximum('INL', minimum('INL', 'RFQ')), square(square('RFQ'))), square(protected_div(minimum('INL', subtract('INL', 'RFQ')), subtract('RFQ', 'INL'))))

Gen: 4
Individual:
Tree 0:
maximum(minimum('FOC', 'PTC'), minimum('PLSC', 'PIP'))
Tree 1:
subtract(square(protected_sqrt(add('RP', square(multiply('CRENT', 'RCAP'))))), maximum(add(add(add('TREQ', maximum('TREQ', 'TREQ')), maximum(square('RCAP'), 'RCAP')), maximum(subtract(protected_sqrt('RCAP'), protected_sqrt('RP')), 'RP')), multiply(square(minimum(maximum('RP', 'RCAP'), multiply('CRENT', 'CRENT'))), multiply(multiply('RCAP', 'RDUR'), maximum(maximum('CRENT', 'RP'), minimum('CRENT', 'CRENT'))))))
Tree 2:
protected_div(maximum(maximum('INL', minimum('INL', 'RFQ')), square(square('RFQ'))), square(protected_div(minimum('INL', subtract('INL', 'RFQ')), subtract('RFQ', 'INL'))))

Gen: 5
Individual:
Tree 0:
maximum(minimum('FOC', 'PTC'), minimum('PLSC', 'PIP'))
Tree 1:
subtract(square(protected_sqrt(add('RP', square(multiply('CRENT', 'RCAP'))))), maximum(add(add(add('TREQ', maximum('TREQ', 'TREQ')), maximum(square('RCAP'), 'RCAP')), maximum(subtract(protected_sqrt('RCAP'), protected_sqrt('RP')), 'RP')), multiply(square(minimum(maximum('RP', 'RCAP'), multiply('CRENT', 'CRENT'))), multiply(multiply('RCAP', 'RDUR'), maximum(maximum('CRENT', 'RP'), minimum('CRENT', 'CRENT'))))))
Tree 2:
protected_div(maximum(maximum('INL', minimum('INL', 'RFQ')), square(square('RFQ'))), square(protected_div(minimum('INL', subtract('INL', 'RFQ')), subtract('RFQ', 'INL'))))
